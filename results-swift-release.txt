::: TRIAL 1 :::
Generating array of 100000 random integers in range: [0, 4294967295)...
Running Swift sort...
Swift sort finished in 0.014614999294281 sec

Running Quick sort...
Quick sort finished in 0.0153850317001343 sec

Running Heap sort...
Heap sort finished in 0.0294910073280334 sec

Running Insertion sort...
Insertion sort finished in 16.3897619843483 sec

Running Selection sort...
Selection sort finished in 12.2282879948616 sec

::: TRIAL 2 :::
Generating array of 100000 random integers in range: [0, 4294967295)...
Running Swift sort...
Swift sort finished in 0.0103630423545837 sec

Running Quick sort...
Quick sort finished in 0.0100539922714233 sec

Running Heap sort...
Heap sort finished in 0.0205810070037842 sec

Running Insertion sort...
Insertion sort finished in 15.7886919975281 sec

Running Selection sort...
Selection sort finished in 12.4940580129623 sec

::: TRIAL 3 :::
Generating array of 100000 random integers in range: [0, 4294967295)...
Running Swift sort...
Swift sort finished in 0.0100209712982178 sec

Running Quick sort...
Quick sort finished in 0.0104489922523499 sec

Running Heap sort...
Heap sort finished in 0.0205739736557007 sec

Running Insertion sort...
Insertion sort finished in 14.4527940154076 sec

Running Selection sort...
Selection sort finished in 13.1266869902611 sec

::: TRIAL 4 :::
Generating array of 100000 random integers in range: [0, 4294967295)...
Running Swift sort...
Swift sort finished in 0.0108250379562378 sec

Running Quick sort...
Quick sort finished in 0.0106679797172546 sec

Running Heap sort...
Heap sort finished in 0.0208569765090942 sec

Running Insertion sort...
Insertion sort finished in 16.1165199875832 sec

Running Selection sort...
Selection sort finished in 11.0954009890556 sec

::: TRIAL 5 :::
Generating array of 100000 random integers in range: [0, 4294967295)...
Running Swift sort...
Swift sort finished in 0.0111690163612366 sec

Running Quick sort...
Quick sort finished in 0.010233998298645 sec

Running Heap sort...
Heap sort finished in 0.0216509699821472 sec

Running Insertion sort...
Insertion sort finished in 15.1408360004425 sec

Running Selection sort...
Selection sort finished in 12.5015989542007 sec

::: TRIAL 6 :::
Generating array of 100000 random integers in range: [0, 4294967295)...
Running Swift sort...
Swift sort finished in 0.0134579539299011 sec

Running Quick sort...
Quick sort finished in 0.011663019657135 sec

Running Heap sort...
Heap sort finished in 0.0310269594192505 sec

Running Insertion sort...
Insertion sort finished in 14.6751620173454 sec

Running Selection sort...
Selection sort finished in 12.1265400052071 sec

::: TRIAL 7 :::
Generating array of 100000 random integers in range: [0, 4294967295)...
Running Swift sort...
Swift sort finished in 0.00995498895645142 sec

Running Quick sort...
Quick sort finished in 0.0102100372314453 sec

Running Heap sort...
Heap sort finished in 0.0204830169677734 sec

Running Insertion sort...
Insertion sort finished in 16.7373189926147 sec

Running Selection sort...
Selection sort finished in 11.5153859853745 sec

::: TRIAL 8 :::
Generating array of 100000 random integers in range: [0, 4294967295)...
Running Swift sort...
Swift sort finished in 0.0101900100708008 sec

Running Quick sort...
Quick sort finished in 0.015051007270813 sec

Running Heap sort...
Heap sort finished in 0.0247380137443542 sec

Running Insertion sort...
Insertion sort finished in 13.9060440063477 sec

Running Selection sort...
Selection sort finished in 11.3800389766693 sec

::: TRIAL 9 :::
Generating array of 100000 random integers in range: [0, 4294967295)...
Running Swift sort...
Swift sort finished in 0.0106669664382935 sec

Running Quick sort...
Quick sort finished in 0.0103819966316223 sec

Running Heap sort...
Heap sort finished in 0.0306220054626465 sec

Running Insertion sort...
Insertion sort finished in 14.7387279868126 sec

Running Selection sort...
Selection sort finished in 12.0444520115852 sec

::: TRIAL 10 :::
Generating array of 100000 random integers in range: [0, 4294967295)...
Running Swift sort...
Swift sort finished in 0.0104660391807556 sec

Running Quick sort...
Quick sort finished in 0.0101230144500732 sec

Running Heap sort...
Heap sort finished in 0.0204029679298401 sec

Running Insertion sort...
Insertion sort finished in 14.1066330075264 sec

Running Selection sort...
Selection sort finished in 12.3866299986839 sec

::: TRIAL 11 :::
Generating array of 100000 random integers in range: [0, 4294967295)...
Running Swift sort...
Swift sort finished in 0.0116440057754517 sec

Running Quick sort...
Quick sort finished in 0.0112000107765198 sec

Running Heap sort...
Heap sort finished in 0.0216459631919861 sec

Running Insertion sort...
Insertion sort finished in 13.722669005394 sec

Running Selection sort...
Selection sort finished in 12.3846160173416 sec

::: TRIAL 12 :::
Generating array of 100000 random integers in range: [0, 4294967295)...
Running Swift sort...
Swift sort finished in 0.0108190178871155 sec

Running Quick sort...
Quick sort finished in 0.010994017124176 sec

Running Heap sort...
Heap sort finished in 0.0203319787979126 sec

Running Insertion sort...
Insertion sort finished in 14.7769960165024 sec

Running Selection sort...
Selection sort finished in 11.1806210279465 sec

::: TRIAL 13 :::
Generating array of 100000 random integers in range: [0, 4294967295)...
Running Swift sort...
Swift sort finished in 0.0102039575576782 sec

Running Quick sort...
Quick sort finished in 0.0101279616355896 sec

Running Heap sort...
Heap sort finished in 0.0203419923782349 sec

Running Insertion sort...
Insertion sort finished in 15.2117400169373 sec

Running Selection sort...
Selection sort finished in 12.439485013485 sec

::: TRIAL 14 :::
Generating array of 100000 random integers in range: [0, 4294967295)...
Running Swift sort...
Swift sort finished in 0.0122790336608887 sec

Running Quick sort...
Quick sort finished in 0.0136380195617676 sec

Running Heap sort...
Heap sort finished in 0.0409629940986633 sec

Running Insertion sort...
Insertion sort finished in 17.1810760498047 sec

Running Selection sort...
Selection sort finished in 11.4139419794083 sec

::: TRIAL 15 :::
Generating array of 100000 random integers in range: [0, 4294967295)...
Running Swift sort...
Swift sort finished in 0.0107210278511047 sec

Running Quick sort...
Quick sort finished in 0.0102880001068115 sec

Running Heap sort...
Heap sort finished in 0.0242399573326111 sec

Running Insertion sort...
Insertion sort finished in 13.5767660140991 sec

Running Selection sort...
Selection sort finished in 11.8312849998474 sec

::: TRIAL 16 :::
Generating array of 100000 random integers in range: [0, 4294967295)...
Running Swift sort...
Swift sort finished in 0.0102390050888062 sec

Running Quick sort...
Quick sort finished in 0.0105190277099609 sec

Running Heap sort...
Heap sort finished in 0.0205999612808228 sec

Running Insertion sort...
Insertion sort finished in 14.5680930018425 sec

Running Selection sort...
Selection sort finished in 10.5165770053864 sec

::: TRIAL 17 :::
Generating array of 100000 random integers in range: [0, 4294967295)...
Running Swift sort...
Swift sort finished in 0.0103920102119446 sec

Running Quick sort...
Quick sort finished in 0.010852038860321 sec

Running Heap sort...
Heap sort finished in 0.0211259722709656 sec

Running Insertion sort...
Insertion sort finished in 14.1491059660912 sec

Running Selection sort...
Selection sort finished in 12.3806799650192 sec

::: TRIAL 18 :::
Generating array of 100000 random integers in range: [0, 4294967295)...
Running Swift sort...
Swift sort finished in 0.0126050114631653 sec

Running Quick sort...
Quick sort finished in 0.0118420124053955 sec

Running Heap sort...
Heap sort finished in 0.0256239771842957 sec

Running Insertion sort...
Insertion sort finished in 13.9251570105553 sec

Running Selection sort...
Selection sort finished in 11.5571590065956 sec

::: TRIAL 19 :::
Generating array of 100000 random integers in range: [0, 4294967295)...
Running Swift sort...
Swift sort finished in 0.010295033454895 sec

Running Quick sort...
Quick sort finished in 0.0101810097694397 sec

Running Heap sort...
Heap sort finished in 0.0206159949302673 sec

Running Insertion sort...
Insertion sort finished in 16.1136969923973 sec

Running Selection sort...
Selection sort finished in 10.6644870042801 sec

::: TRIAL 20 :::
Generating array of 100000 random integers in range: [0, 4294967295)...
Running Swift sort...
Swift sort finished in 0.0100030303001404 sec

Running Quick sort...
Quick sort finished in 0.0101990103721619 sec

Running Heap sort...
Heap sort finished in 0.0222629904747009 sec

Running Insertion sort...
Insertion sort finished in 14.4837750196457 sec

Running Selection sort...
Selection sort finished in 13.4026139974594 sec


Final Results:
--------------
Swift sort: 0.011047 s (± 0.001234)
Quick sort: 0.011203 s (± 0.001573)
Heap sort: 0.023909 s (± 0.005220)
Insertion sort: 14.988078 s (± 1.034043)
Selection sort: 11.933527 s (± 0.741981)

Program ended with exit code: 0



